@use '../../styles/styles.scss' as *;

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s ease-out;
}

.modal {
  background: white;
  border-radius: $radius-md;
  padding: 24px;
  width: 90%;
  max-width: 400px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  animation: slideIn 0.2s ease-out;
}

.title {
  margin: 0 0 16px 0;
  font-size: 18px;
  font-weight: 600;
  color: $text;
}

.inputWrapper {
  margin-bottom: 16px;
}

.input {
  width: 100%;
  padding: 10px 12px;
  font-size: $font-md;
  border: 2px solid $border;
  border-radius: $radius-sm;
  outline: none;
  transition: border-color 0.2s;
  box-sizing: border-box;

  &:focus {
    border-color: $primary;
  }

  &::placeholder {
    color: $text-muted;
  }
}

.inputError {
  border-color: $danger;

  &:focus {
    border-color: $danger;
  }
}

.error {
  display: block;
  color: $danger;
  font-size: $font-sm;
  margin-top: 4px;
}

.actions {
  display: flex;
  gap: 8px;
  justify-content: flex-end;
}

.confirmButton,
.cancelButton {
  padding: 12px 20px;
  min-height: 44px;
  font-size: $font-md;
  font-weight: 500;
  border-radius: $radius-sm;
  cursor: pointer;
  transition: all 0.2s;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  // Mobile - larger touch target
  @include mobile {
    padding: 14px 24px;
    min-height: 48px;
    font-size: 16px;
  }
}

.confirmButton {
  background-color: $primary;
  color: white;

  &:hover:not(:disabled) {
    background-color: $primary-hover;
  }

  &:disabled {
    background-color: $border;
    color: $text-muted;
    cursor: not-allowed;
  }
}

.cancelButton {
  background-color: transparent;
  color: $text-secondary;

  &:hover {
    background-color: $background-light;
  }
}

// Animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
